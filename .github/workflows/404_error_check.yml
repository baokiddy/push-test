name: Scan Markdown Files for 404 Errors

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily (adjust as needed)
  workflow_dispatch: # Allows manual triggering

jobs:
  scan-md-404-errors:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Install necessary tools
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y curl grep sed

      # Step 3: Debugging step to list all .md files and extracted links
      - name: Debug Markdown Files
        run: |
          echo "Markdown files found:"
          find . -name "*.md" || echo "No Markdown files found."

          echo "Contents of Markdown files:"
          find . -name "*.md" -exec cat {} \; || echo "No Markdown files found."

          echo "Extracted Markdown Links:"
          find . -name "*.md" -exec grep -oP '\[([^\]]+)\]\(([^)]+)\)' {} \; || echo "No Markdown links found."

          echo "Extracted Plain URLs:"
          find . -name "*.md" -exec grep -oP 'http[s]?://[^\s)]+|www\.[^\s)]+|ftp://[^\s)]+|file://[^\s)]+' {} \; || echo "No plain URLs found."

      # Step 4: Scan Markdown files for broken links
      - name: Scan Markdown Files for Broken Links
        run: |
          touch md-404-errors.log # Ensure log file is created

          find . -name "*.md" | while read file; do
            echo "Processing $file..."

            # Check Markdown-style links
            markdown_links=$(grep -oP '\[([^\]]+)\]\(([^)]+)\)' "$file")
            if [ -n "$markdown_links" ]; then
              echo "Markdown links found in $file:"
              echo "$markdown_links"
              while read link; do
                url=$(echo "$link" | grep -oP '\(([^)]+)\)' | tr -d '()')
                status_code=$(curl -o /dev/null -s -w "%{http_code}" "$url")
                if [ "$status_code" == "404" ]; then
                  echo "404 Error (Markdown link) in $file: $url" >> md-404-errors.log
                fi
              done <<< "$markdown_links"
            else
              echo "No Markdown links found in $file."
            fi

            # Check plain URLs
            plain_urls=$(grep -oP 'http[s]?://[^\s)]+|www\.[^\s)]+|ftp://[^\s)]+|file://[^\s)]+' "$file")
            if [ -n "$plain_urls" ]; then
              echo "Plain URLs found in $file:"
              echo "$plain_urls"
              while read url; do
                if [[ $url != www.* ]]; then
                  url="http://$url"
                fi
                status_code=$(curl -o /dev/null -s -w "%{http_code}" "$url")
                if [ "$status_code" == "404" ]; then
                  echo "404 Error (Plain URL) in $file: $url" >> md-404-errors.log
                fi
              done <<< "$plain_urls"
            else
              echo "No plain URLs found in $file."
            fi
          done

          if [ ! -s md-404-errors.log ]; then
            echo "No broken links found." >> md-404-errors.log
          fi

      # Step 5: Upload log file as an artifact
      - name: Upload Log File
        uses: actions/upload-artifact@v4
        with:
          name: md-404-errors-log
          path: md-404-errors.log
